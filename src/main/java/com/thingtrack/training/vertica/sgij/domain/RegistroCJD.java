//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 09:48:48 PM CEST 
//


package com.thingtrack.training.vertica.sgij.domain;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RegistroCJD complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistroCJD">
 *   &lt;complexContent>
 *     &lt;extension base="{http://cnjuego.gob.es/sci/v2.13.xsd}RegistroPeriodicoBase">
 *       &lt;sequence>
 *         &lt;element name="Jugador" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="ID" type="{http://cnjuego.gob.es/sci/v2.13.xsd}ID" maxOccurs="unbounded"/>
 *                   &lt;element name="SaldoInicial" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
 *                   &lt;element name="Depositos" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperaciones"/>
 *                   &lt;element name="Retiradas" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperaciones"/>
 *                   &lt;element name="Participacion" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
 *                   &lt;element name="ParticipacionDevolucion" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
 *                   &lt;element name="Premios" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
 *                   &lt;element name="Otros" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorConcepto"/>
 *                   &lt;element name="SaldoFinal" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
 *                   &lt;element name="PremiosEspecie" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
 *                   &lt;element name="Cuentas" maxOccurs="unbounded">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="Cuenta" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             &lt;element name="SaldoFinal" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="AjustePremios" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
 *                   &lt;element name="Trans_IN" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperador"/>
 *                   &lt;element name="Trans_OUT" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperador"/>
 *                   &lt;element name="Comision" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
 *                   &lt;element name="Bonos" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorConcepto"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistroCJD", propOrder = {
    "jugador"
})
@Entity(name = "RegistroCJD")
@Table(name = "REGISTROCJD", schema = "sgij")
public class RegistroCJD
    extends RegistroPeriodicoBase
    implements Equals, HashCode
{

    @XmlElement(name = "Jugador")
    protected List<RegistroCJD.Jugador> jugador;

    /**
     * Gets the value of the jugador property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the jugador property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getJugador().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegistroCJD.Jugador }
     * 
     * 
     */
    @OneToMany(targetEntity = RegistroCJD.Jugador.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "JUGADOR_REGISTROCJD_HJID")
    public List<RegistroCJD.Jugador> getJugador() {
        if (jugador == null) {
            jugador = new ArrayList<RegistroCJD.Jugador>();
        }
        return this.jugador;
    }

    /**
     * 
     * 
     */
    public void setJugador(List<RegistroCJD.Jugador> jugador) {
        this.jugador = jugador;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RegistroCJD)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RegistroCJD that = ((RegistroCJD) object);
        {
            List<RegistroCJD.Jugador> lhsJugador;
            lhsJugador = (((this.jugador!= null)&&(!this.jugador.isEmpty()))?this.getJugador():null);
            List<RegistroCJD.Jugador> rhsJugador;
            rhsJugador = (((that.jugador!= null)&&(!that.jugador.isEmpty()))?that.getJugador():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "jugador", lhsJugador), LocatorUtils.property(thatLocator, "jugador", rhsJugador), lhsJugador, rhsJugador)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<RegistroCJD.Jugador> theJugador;
            theJugador = (((this.jugador!= null)&&(!this.jugador.isEmpty()))?this.getJugador():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "jugador", theJugador), currentHashCode, theJugador);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="ID" type="{http://cnjuego.gob.es/sci/v2.13.xsd}ID" maxOccurs="unbounded"/>
     *         &lt;element name="SaldoInicial" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
     *         &lt;element name="Depositos" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperaciones"/>
     *         &lt;element name="Retiradas" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperaciones"/>
     *         &lt;element name="Participacion" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
     *         &lt;element name="ParticipacionDevolucion" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
     *         &lt;element name="Premios" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
     *         &lt;element name="Otros" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorConcepto"/>
     *         &lt;element name="SaldoFinal" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
     *         &lt;element name="PremiosEspecie" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
     *         &lt;element name="Cuentas" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="Cuenta" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   &lt;element name="SaldoFinal" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="AjustePremios" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
     *         &lt;element name="Trans_IN" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperador"/>
     *         &lt;element name="Trans_OUT" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperador"/>
     *         &lt;element name="Comision" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorTipoJuego"/>
     *         &lt;element name="Bonos" type="{http://cnjuego.gob.es/sci/v2.13.xsd}DesgloseOperadorConcepto"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "id",
        "saldoInicial",
        "depositos",
        "retiradas",
        "participacion",
        "participacionDevolucion",
        "premios",
        "otros",
        "saldoFinal",
        "premiosEspecie",
        "cuentas",
        "ajustePremios",
        "transIN",
        "transOUT",
        "comision",
        "bonos"
    })
    @Entity(name = "RegistroCJD$Jugador")
    @Table(name = "JUGADOR", schema = "sgij")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Jugador
        implements Equals, HashCode
    {

        @XmlElement(name = "ID", required = true)
        protected List<ID> id;
        @XmlElement(name = "SaldoInicial", required = true)
        protected Importe saldoInicial;
        @XmlElement(name = "Depositos", required = true)
        protected DesgloseOperaciones depositos;
        @XmlElement(name = "Retiradas", required = true)
        protected DesgloseOperaciones retiradas;
        @XmlElement(name = "Participacion", required = true)
        protected DesgloseOperadorTipoJuego participacion;
        @XmlElement(name = "ParticipacionDevolucion", required = true)
        protected DesgloseOperadorTipoJuego participacionDevolucion;
        @XmlElement(name = "Premios", required = true)
        protected DesgloseOperadorTipoJuego premios;
        @XmlElement(name = "Otros", required = true)
        protected DesgloseOperadorConcepto otros;
        @XmlElement(name = "SaldoFinal", required = true)
        protected Importe saldoFinal;
        @XmlElement(name = "PremiosEspecie", required = true)
        protected DesgloseOperadorTipoJuego premiosEspecie;
        @XmlElement(name = "Cuentas", required = true)
        protected List<RegistroCJD.Jugador.Cuentas> cuentas;
        @XmlElement(name = "AjustePremios", required = true)
        protected DesgloseOperadorTipoJuego ajustePremios;
        @XmlElement(name = "Trans_IN", required = true)
        protected DesgloseOperador transIN;
        @XmlElement(name = "Trans_OUT", required = true)
        protected DesgloseOperador transOUT;
        @XmlElement(name = "Comision", required = true)
        protected DesgloseOperadorTipoJuego comision;
        @XmlElement(name = "Bonos", required = true)
        protected DesgloseOperadorConcepto bonos;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the id property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the id property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getID().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ID }
         * 
         * 
         */
        @OneToMany(targetEntity = ID.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "ID_JUGADOR_HJID")
        public List<ID> getID() {
            if (id == null) {
                id = new ArrayList<ID>();
            }
            return this.id;
        }

        /**
         * 
         * 
         */
        public void setID(List<ID> id) {
            this.id = id;
        }

        /**
         * Gets the value of the saldoInicial property.
         * 
         * @return
         *     possible object is
         *     {@link Importe }
         *     
         */
        @ManyToOne(targetEntity = Importe.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "SALDOINICIAL_JUGADOR_HJID")
        public Importe getSaldoInicial() {
            return saldoInicial;
        }

        /**
         * Sets the value of the saldoInicial property.
         * 
         * @param value
         *     allowed object is
         *     {@link Importe }
         *     
         */
        public void setSaldoInicial(Importe value) {
            this.saldoInicial = value;
        }

        /**
         * Gets the value of the depositos property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperaciones }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperaciones.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "DEPOSITOS_JUGADOR_HJID")
        public DesgloseOperaciones getDepositos() {
            return depositos;
        }

        /**
         * Sets the value of the depositos property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperaciones }
         *     
         */
        public void setDepositos(DesgloseOperaciones value) {
            this.depositos = value;
        }

        /**
         * Gets the value of the retiradas property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperaciones }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperaciones.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "RETIRADAS_JUGADOR_HJID")
        public DesgloseOperaciones getRetiradas() {
            return retiradas;
        }

        /**
         * Sets the value of the retiradas property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperaciones }
         *     
         */
        public void setRetiradas(DesgloseOperaciones value) {
            this.retiradas = value;
        }

        /**
         * Gets the value of the participacion property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorTipoJuego.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "PARTICIPACION_JUGADOR_HJID")
        public DesgloseOperadorTipoJuego getParticipacion() {
            return participacion;
        }

        /**
         * Sets the value of the participacion property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        public void setParticipacion(DesgloseOperadorTipoJuego value) {
            this.participacion = value;
        }

        /**
         * Gets the value of the participacionDevolucion property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorTipoJuego.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "PARTICIPACIONDEVOLUCION_JUGA_0")
        public DesgloseOperadorTipoJuego getParticipacionDevolucion() {
            return participacionDevolucion;
        }

        /**
         * Sets the value of the participacionDevolucion property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        public void setParticipacionDevolucion(DesgloseOperadorTipoJuego value) {
            this.participacionDevolucion = value;
        }

        /**
         * Gets the value of the premios property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorTipoJuego.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "PREMIOS_JUGADOR_HJID")
        public DesgloseOperadorTipoJuego getPremios() {
            return premios;
        }

        /**
         * Sets the value of the premios property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        public void setPremios(DesgloseOperadorTipoJuego value) {
            this.premios = value;
        }

        /**
         * Gets the value of the otros property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorConcepto }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorConcepto.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "OTROS_JUGADOR_HJID")
        public DesgloseOperadorConcepto getOtros() {
            return otros;
        }

        /**
         * Sets the value of the otros property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorConcepto }
         *     
         */
        public void setOtros(DesgloseOperadorConcepto value) {
            this.otros = value;
        }

        /**
         * Gets the value of the saldoFinal property.
         * 
         * @return
         *     possible object is
         *     {@link Importe }
         *     
         */
        @ManyToOne(targetEntity = Importe.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "SALDOFINAL_JUGADOR_HJID")
        public Importe getSaldoFinal() {
            return saldoFinal;
        }

        /**
         * Sets the value of the saldoFinal property.
         * 
         * @param value
         *     allowed object is
         *     {@link Importe }
         *     
         */
        public void setSaldoFinal(Importe value) {
            this.saldoFinal = value;
        }

        /**
         * Gets the value of the premiosEspecie property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorTipoJuego.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "PREMIOSESPECIE_JUGADOR_HJID")
        public DesgloseOperadorTipoJuego getPremiosEspecie() {
            return premiosEspecie;
        }

        /**
         * Sets the value of the premiosEspecie property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        public void setPremiosEspecie(DesgloseOperadorTipoJuego value) {
            this.premiosEspecie = value;
        }

        /**
         * Gets the value of the cuentas property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the cuentas property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCuentas().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link RegistroCJD.Jugador.Cuentas }
         * 
         * 
         */
        @OneToMany(targetEntity = com.thingtrack.training.vertica.sgij.domain.RegistroCJD.Jugador.Cuentas.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "CUENTAS_JUGADOR_HJID")
        public List<RegistroCJD.Jugador.Cuentas> getCuentas() {
            if (cuentas == null) {
                cuentas = new ArrayList<RegistroCJD.Jugador.Cuentas>();
            }
            return this.cuentas;
        }

        /**
         * 
         * 
         */
        public void setCuentas(List<RegistroCJD.Jugador.Cuentas> cuentas) {
            this.cuentas = cuentas;
        }

        /**
         * Gets the value of the ajustePremios property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorTipoJuego.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "AJUSTEPREMIOS_JUGADOR_HJID")
        public DesgloseOperadorTipoJuego getAjustePremios() {
            return ajustePremios;
        }

        /**
         * Sets the value of the ajustePremios property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        public void setAjustePremios(DesgloseOperadorTipoJuego value) {
            this.ajustePremios = value;
        }

        /**
         * Gets the value of the transIN property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperador }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperador.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "TRANSIN_JUGADOR_HJID")
        public DesgloseOperador getTransIN() {
            return transIN;
        }

        /**
         * Sets the value of the transIN property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperador }
         *     
         */
        public void setTransIN(DesgloseOperador value) {
            this.transIN = value;
        }

        /**
         * Gets the value of the transOUT property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperador }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperador.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "TRANSOUT_JUGADOR_HJID")
        public DesgloseOperador getTransOUT() {
            return transOUT;
        }

        /**
         * Sets the value of the transOUT property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperador }
         *     
         */
        public void setTransOUT(DesgloseOperador value) {
            this.transOUT = value;
        }

        /**
         * Gets the value of the comision property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorTipoJuego.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "COMISION_JUGADOR_HJID")
        public DesgloseOperadorTipoJuego getComision() {
            return comision;
        }

        /**
         * Sets the value of the comision property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorTipoJuego }
         *     
         */
        public void setComision(DesgloseOperadorTipoJuego value) {
            this.comision = value;
        }

        /**
         * Gets the value of the bonos property.
         * 
         * @return
         *     possible object is
         *     {@link DesgloseOperadorConcepto }
         *     
         */
        @ManyToOne(targetEntity = DesgloseOperadorConcepto.class, cascade = {
            CascadeType.ALL
        })
        @JoinColumn(name = "BONOS_JUGADOR_HJID")
        public DesgloseOperadorConcepto getBonos() {
            return bonos;
        }

        /**
         * Sets the value of the bonos property.
         * 
         * @param value
         *     allowed object is
         *     {@link DesgloseOperadorConcepto }
         *     
         */
        public void setBonos(DesgloseOperadorConcepto value) {
            this.bonos = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof RegistroCJD.Jugador)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final RegistroCJD.Jugador that = ((RegistroCJD.Jugador) object);
            {
                List<ID> lhsID;
                lhsID = (((this.id!= null)&&(!this.id.isEmpty()))?this.getID():null);
                List<ID> rhsID;
                rhsID = (((that.id!= null)&&(!that.id.isEmpty()))?that.getID():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsID), LocatorUtils.property(thatLocator, "id", rhsID), lhsID, rhsID)) {
                    return false;
                }
            }
            {
                Importe lhsSaldoInicial;
                lhsSaldoInicial = this.getSaldoInicial();
                Importe rhsSaldoInicial;
                rhsSaldoInicial = that.getSaldoInicial();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "saldoInicial", lhsSaldoInicial), LocatorUtils.property(thatLocator, "saldoInicial", rhsSaldoInicial), lhsSaldoInicial, rhsSaldoInicial)) {
                    return false;
                }
            }
            {
                DesgloseOperaciones lhsDepositos;
                lhsDepositos = this.getDepositos();
                DesgloseOperaciones rhsDepositos;
                rhsDepositos = that.getDepositos();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "depositos", lhsDepositos), LocatorUtils.property(thatLocator, "depositos", rhsDepositos), lhsDepositos, rhsDepositos)) {
                    return false;
                }
            }
            {
                DesgloseOperaciones lhsRetiradas;
                lhsRetiradas = this.getRetiradas();
                DesgloseOperaciones rhsRetiradas;
                rhsRetiradas = that.getRetiradas();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "retiradas", lhsRetiradas), LocatorUtils.property(thatLocator, "retiradas", rhsRetiradas), lhsRetiradas, rhsRetiradas)) {
                    return false;
                }
            }
            {
                DesgloseOperadorTipoJuego lhsParticipacion;
                lhsParticipacion = this.getParticipacion();
                DesgloseOperadorTipoJuego rhsParticipacion;
                rhsParticipacion = that.getParticipacion();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "participacion", lhsParticipacion), LocatorUtils.property(thatLocator, "participacion", rhsParticipacion), lhsParticipacion, rhsParticipacion)) {
                    return false;
                }
            }
            {
                DesgloseOperadorTipoJuego lhsParticipacionDevolucion;
                lhsParticipacionDevolucion = this.getParticipacionDevolucion();
                DesgloseOperadorTipoJuego rhsParticipacionDevolucion;
                rhsParticipacionDevolucion = that.getParticipacionDevolucion();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "participacionDevolucion", lhsParticipacionDevolucion), LocatorUtils.property(thatLocator, "participacionDevolucion", rhsParticipacionDevolucion), lhsParticipacionDevolucion, rhsParticipacionDevolucion)) {
                    return false;
                }
            }
            {
                DesgloseOperadorTipoJuego lhsPremios;
                lhsPremios = this.getPremios();
                DesgloseOperadorTipoJuego rhsPremios;
                rhsPremios = that.getPremios();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "premios", lhsPremios), LocatorUtils.property(thatLocator, "premios", rhsPremios), lhsPremios, rhsPremios)) {
                    return false;
                }
            }
            {
                DesgloseOperadorConcepto lhsOtros;
                lhsOtros = this.getOtros();
                DesgloseOperadorConcepto rhsOtros;
                rhsOtros = that.getOtros();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "otros", lhsOtros), LocatorUtils.property(thatLocator, "otros", rhsOtros), lhsOtros, rhsOtros)) {
                    return false;
                }
            }
            {
                Importe lhsSaldoFinal;
                lhsSaldoFinal = this.getSaldoFinal();
                Importe rhsSaldoFinal;
                rhsSaldoFinal = that.getSaldoFinal();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "saldoFinal", lhsSaldoFinal), LocatorUtils.property(thatLocator, "saldoFinal", rhsSaldoFinal), lhsSaldoFinal, rhsSaldoFinal)) {
                    return false;
                }
            }
            {
                DesgloseOperadorTipoJuego lhsPremiosEspecie;
                lhsPremiosEspecie = this.getPremiosEspecie();
                DesgloseOperadorTipoJuego rhsPremiosEspecie;
                rhsPremiosEspecie = that.getPremiosEspecie();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "premiosEspecie", lhsPremiosEspecie), LocatorUtils.property(thatLocator, "premiosEspecie", rhsPremiosEspecie), lhsPremiosEspecie, rhsPremiosEspecie)) {
                    return false;
                }
            }
            {
                List<RegistroCJD.Jugador.Cuentas> lhsCuentas;
                lhsCuentas = (((this.cuentas!= null)&&(!this.cuentas.isEmpty()))?this.getCuentas():null);
                List<RegistroCJD.Jugador.Cuentas> rhsCuentas;
                rhsCuentas = (((that.cuentas!= null)&&(!that.cuentas.isEmpty()))?that.getCuentas():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "cuentas", lhsCuentas), LocatorUtils.property(thatLocator, "cuentas", rhsCuentas), lhsCuentas, rhsCuentas)) {
                    return false;
                }
            }
            {
                DesgloseOperadorTipoJuego lhsAjustePremios;
                lhsAjustePremios = this.getAjustePremios();
                DesgloseOperadorTipoJuego rhsAjustePremios;
                rhsAjustePremios = that.getAjustePremios();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "ajustePremios", lhsAjustePremios), LocatorUtils.property(thatLocator, "ajustePremios", rhsAjustePremios), lhsAjustePremios, rhsAjustePremios)) {
                    return false;
                }
            }
            {
                DesgloseOperador lhsTransIN;
                lhsTransIN = this.getTransIN();
                DesgloseOperador rhsTransIN;
                rhsTransIN = that.getTransIN();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "transIN", lhsTransIN), LocatorUtils.property(thatLocator, "transIN", rhsTransIN), lhsTransIN, rhsTransIN)) {
                    return false;
                }
            }
            {
                DesgloseOperador lhsTransOUT;
                lhsTransOUT = this.getTransOUT();
                DesgloseOperador rhsTransOUT;
                rhsTransOUT = that.getTransOUT();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "transOUT", lhsTransOUT), LocatorUtils.property(thatLocator, "transOUT", rhsTransOUT), lhsTransOUT, rhsTransOUT)) {
                    return false;
                }
            }
            {
                DesgloseOperadorTipoJuego lhsComision;
                lhsComision = this.getComision();
                DesgloseOperadorTipoJuego rhsComision;
                rhsComision = that.getComision();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "comision", lhsComision), LocatorUtils.property(thatLocator, "comision", rhsComision), lhsComision, rhsComision)) {
                    return false;
                }
            }
            {
                DesgloseOperadorConcepto lhsBonos;
                lhsBonos = this.getBonos();
                DesgloseOperadorConcepto rhsBonos;
                rhsBonos = that.getBonos();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "bonos", lhsBonos), LocatorUtils.property(thatLocator, "bonos", rhsBonos), lhsBonos, rhsBonos)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<ID> theID;
                theID = (((this.id!= null)&&(!this.id.isEmpty()))?this.getID():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theID), currentHashCode, theID);
            }
            {
                Importe theSaldoInicial;
                theSaldoInicial = this.getSaldoInicial();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "saldoInicial", theSaldoInicial), currentHashCode, theSaldoInicial);
            }
            {
                DesgloseOperaciones theDepositos;
                theDepositos = this.getDepositos();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "depositos", theDepositos), currentHashCode, theDepositos);
            }
            {
                DesgloseOperaciones theRetiradas;
                theRetiradas = this.getRetiradas();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "retiradas", theRetiradas), currentHashCode, theRetiradas);
            }
            {
                DesgloseOperadorTipoJuego theParticipacion;
                theParticipacion = this.getParticipacion();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "participacion", theParticipacion), currentHashCode, theParticipacion);
            }
            {
                DesgloseOperadorTipoJuego theParticipacionDevolucion;
                theParticipacionDevolucion = this.getParticipacionDevolucion();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "participacionDevolucion", theParticipacionDevolucion), currentHashCode, theParticipacionDevolucion);
            }
            {
                DesgloseOperadorTipoJuego thePremios;
                thePremios = this.getPremios();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premios", thePremios), currentHashCode, thePremios);
            }
            {
                DesgloseOperadorConcepto theOtros;
                theOtros = this.getOtros();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otros", theOtros), currentHashCode, theOtros);
            }
            {
                Importe theSaldoFinal;
                theSaldoFinal = this.getSaldoFinal();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "saldoFinal", theSaldoFinal), currentHashCode, theSaldoFinal);
            }
            {
                DesgloseOperadorTipoJuego thePremiosEspecie;
                thePremiosEspecie = this.getPremiosEspecie();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "premiosEspecie", thePremiosEspecie), currentHashCode, thePremiosEspecie);
            }
            {
                List<RegistroCJD.Jugador.Cuentas> theCuentas;
                theCuentas = (((this.cuentas!= null)&&(!this.cuentas.isEmpty()))?this.getCuentas():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cuentas", theCuentas), currentHashCode, theCuentas);
            }
            {
                DesgloseOperadorTipoJuego theAjustePremios;
                theAjustePremios = this.getAjustePremios();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ajustePremios", theAjustePremios), currentHashCode, theAjustePremios);
            }
            {
                DesgloseOperador theTransIN;
                theTransIN = this.getTransIN();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transIN", theTransIN), currentHashCode, theTransIN);
            }
            {
                DesgloseOperador theTransOUT;
                theTransOUT = this.getTransOUT();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transOUT", theTransOUT), currentHashCode, theTransOUT);
            }
            {
                DesgloseOperadorTipoJuego theComision;
                theComision = this.getComision();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comision", theComision), currentHashCode, theComision);
            }
            {
                DesgloseOperadorConcepto theBonos;
                theBonos = this.getBonos();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bonos", theBonos), currentHashCode, theBonos);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="Cuenta" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         &lt;element name="SaldoFinal" type="{http://cnjuego.gob.es/sci/v2.13.xsd}Importe"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "cuenta",
            "saldoFinal"
        })
        @Entity(name = "RegistroCJD$Jugador$Cuentas")
        @Table(name = "CUENTAS", schema = "sgij")
        @Inheritance(strategy = InheritanceType.JOINED)
        public static class Cuentas
            implements Equals, HashCode
        {

            @XmlElement(name = "Cuenta", required = true)
            protected String cuenta;
            @XmlElement(name = "SaldoFinal", required = true)
            protected Importe saldoFinal;
            @XmlAttribute(name = "Hjid")
            protected Long hjid;

            /**
             * Gets the value of the cuenta property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            @Basic
            @Column(name = "CUENTA", length = 255)
            public String getCuenta() {
                return cuenta;
            }

            /**
             * Sets the value of the cuenta property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setCuenta(String value) {
                this.cuenta = value;
            }

            /**
             * Gets the value of the saldoFinal property.
             * 
             * @return
             *     possible object is
             *     {@link Importe }
             *     
             */
            @ManyToOne(targetEntity = Importe.class, cascade = {
                CascadeType.ALL
            })
            @JoinColumn(name = "SALDOFINAL_CUENTAS_HJID")
            public Importe getSaldoFinal() {
                return saldoFinal;
            }

            /**
             * Sets the value of the saldoFinal property.
             * 
             * @param value
             *     allowed object is
             *     {@link Importe }
             *     
             */
            public void setSaldoFinal(Importe value) {
                this.saldoFinal = value;
            }

            /**
             * Gets the value of the hjid property.
             * 
             * @return
             *     possible object is
             *     {@link Long }
             *     
             */
            @Id
            @Column(name = "HJID")
            @GeneratedValue(strategy = GenerationType.AUTO)
            public Long getHjid() {
                return hjid;
            }

            /**
             * Sets the value of the hjid property.
             * 
             * @param value
             *     allowed object is
             *     {@link Long }
             *     
             */
            public void setHjid(Long value) {
                this.hjid = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof RegistroCJD.Jugador.Cuentas)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final RegistroCJD.Jugador.Cuentas that = ((RegistroCJD.Jugador.Cuentas) object);
                {
                    String lhsCuenta;
                    lhsCuenta = this.getCuenta();
                    String rhsCuenta;
                    rhsCuenta = that.getCuenta();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "cuenta", lhsCuenta), LocatorUtils.property(thatLocator, "cuenta", rhsCuenta), lhsCuenta, rhsCuenta)) {
                        return false;
                    }
                }
                {
                    Importe lhsSaldoFinal;
                    lhsSaldoFinal = this.getSaldoFinal();
                    Importe rhsSaldoFinal;
                    rhsSaldoFinal = that.getSaldoFinal();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "saldoFinal", lhsSaldoFinal), LocatorUtils.property(thatLocator, "saldoFinal", rhsSaldoFinal), lhsSaldoFinal, rhsSaldoFinal)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theCuenta;
                    theCuenta = this.getCuenta();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cuenta", theCuenta), currentHashCode, theCuenta);
                }
                {
                    Importe theSaldoFinal;
                    theSaldoFinal = this.getSaldoFinal();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "saldoFinal", theSaldoFinal), currentHashCode, theSaldoFinal);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

        }

    }

}
