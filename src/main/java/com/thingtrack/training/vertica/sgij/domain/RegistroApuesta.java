//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 09:48:48 PM CEST 
//


package com.thingtrack.training.vertica.sgij.domain;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RegistroApuesta complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistroApuesta">
 *   &lt;complexContent>
 *     &lt;extension base="{http://cnjuego.gob.es/sci/v2.13.xsd}RegistroJUT">
 *       &lt;sequence>
 *         &lt;element name="EnDirecto">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="N"/>
 *               &lt;enumeration value="S"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="TipoApuesta">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="S"/>
 *               &lt;enumeration value="M"/>
 *               &lt;enumeration value="C"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="NumeroEventos" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="Eventos" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="EventoId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="Hecho" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="FechaHecho" type="{http://cnjuego.gob.es/sci/v2.13.xsd}date-aaaammddhhmmssTZ"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="NumeroApostantes" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistroApuesta", propOrder = {
    "enDirecto",
    "tipoApuesta",
    "numeroEventos",
    "eventos",
    "numeroApostantes"
})
@Entity(name = "RegistroApuesta")
@Table(name = "REGISTROAPUESTA", schema = "sgij")
public class RegistroApuesta
    extends RegistroJUT
    implements Equals, HashCode
{

    @XmlElement(name = "EnDirecto", required = true)
    protected String enDirecto;
    @XmlElement(name = "TipoApuesta", required = true)
    protected String tipoApuesta;
    @XmlElement(name = "NumeroEventos", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numeroEventos;
    @XmlElement(name = "Eventos", required = true)
    protected List<RegistroApuesta.Eventos> eventos;
    @XmlElement(name = "NumeroApostantes", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numeroApostantes;

    /**
     * Gets the value of the enDirecto property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ENDIRECTO")
    public String getEnDirecto() {
        return enDirecto;
    }

    /**
     * Sets the value of the enDirecto property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnDirecto(String value) {
        this.enDirecto = value;
    }

    /**
     * Gets the value of the tipoApuesta property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TIPOAPUESTA")
    public String getTipoApuesta() {
        return tipoApuesta;
    }

    /**
     * Sets the value of the tipoApuesta property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTipoApuesta(String value) {
        this.tipoApuesta = value;
    }

    /**
     * Gets the value of the numeroEventos property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMEROEVENTOS", precision = 20, scale = 0)
    public BigInteger getNumeroEventos() {
        return numeroEventos;
    }

    /**
     * Sets the value of the numeroEventos property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumeroEventos(BigInteger value) {
        this.numeroEventos = value;
    }

    /**
     * Gets the value of the eventos property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the eventos property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEventos().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegistroApuesta.Eventos }
     * 
     * 
     */
    @OneToMany(targetEntity = RegistroApuesta.Eventos.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EVENTOS_REGISTROAPUESTA_HJID")
    public List<RegistroApuesta.Eventos> getEventos() {
        if (eventos == null) {
            eventos = new ArrayList<RegistroApuesta.Eventos>();
        }
        return this.eventos;
    }

    /**
     * 
     * 
     */
    public void setEventos(List<RegistroApuesta.Eventos> eventos) {
        this.eventos = eventos;
    }

    /**
     * Gets the value of the numeroApostantes property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMEROAPOSTANTES", precision = 20, scale = 0)
    public BigInteger getNumeroApostantes() {
        return numeroApostantes;
    }

    /**
     * Sets the value of the numeroApostantes property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumeroApostantes(BigInteger value) {
        this.numeroApostantes = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RegistroApuesta)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RegistroApuesta that = ((RegistroApuesta) object);
        {
            String lhsEnDirecto;
            lhsEnDirecto = this.getEnDirecto();
            String rhsEnDirecto;
            rhsEnDirecto = that.getEnDirecto();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enDirecto", lhsEnDirecto), LocatorUtils.property(thatLocator, "enDirecto", rhsEnDirecto), lhsEnDirecto, rhsEnDirecto)) {
                return false;
            }
        }
        {
            String lhsTipoApuesta;
            lhsTipoApuesta = this.getTipoApuesta();
            String rhsTipoApuesta;
            rhsTipoApuesta = that.getTipoApuesta();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tipoApuesta", lhsTipoApuesta), LocatorUtils.property(thatLocator, "tipoApuesta", rhsTipoApuesta), lhsTipoApuesta, rhsTipoApuesta)) {
                return false;
            }
        }
        {
            BigInteger lhsNumeroEventos;
            lhsNumeroEventos = this.getNumeroEventos();
            BigInteger rhsNumeroEventos;
            rhsNumeroEventos = that.getNumeroEventos();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroEventos", lhsNumeroEventos), LocatorUtils.property(thatLocator, "numeroEventos", rhsNumeroEventos), lhsNumeroEventos, rhsNumeroEventos)) {
                return false;
            }
        }
        {
            List<RegistroApuesta.Eventos> lhsEventos;
            lhsEventos = (((this.eventos!= null)&&(!this.eventos.isEmpty()))?this.getEventos():null);
            List<RegistroApuesta.Eventos> rhsEventos;
            rhsEventos = (((that.eventos!= null)&&(!that.eventos.isEmpty()))?that.getEventos():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "eventos", lhsEventos), LocatorUtils.property(thatLocator, "eventos", rhsEventos), lhsEventos, rhsEventos)) {
                return false;
            }
        }
        {
            BigInteger lhsNumeroApostantes;
            lhsNumeroApostantes = this.getNumeroApostantes();
            BigInteger rhsNumeroApostantes;
            rhsNumeroApostantes = that.getNumeroApostantes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroApostantes", lhsNumeroApostantes), LocatorUtils.property(thatLocator, "numeroApostantes", rhsNumeroApostantes), lhsNumeroApostantes, rhsNumeroApostantes)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theEnDirecto;
            theEnDirecto = this.getEnDirecto();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enDirecto", theEnDirecto), currentHashCode, theEnDirecto);
        }
        {
            String theTipoApuesta;
            theTipoApuesta = this.getTipoApuesta();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tipoApuesta", theTipoApuesta), currentHashCode, theTipoApuesta);
        }
        {
            BigInteger theNumeroEventos;
            theNumeroEventos = this.getNumeroEventos();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroEventos", theNumeroEventos), currentHashCode, theNumeroEventos);
        }
        {
            List<RegistroApuesta.Eventos> theEventos;
            theEventos = (((this.eventos!= null)&&(!this.eventos.isEmpty()))?this.getEventos():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventos", theEventos), currentHashCode, theEventos);
        }
        {
            BigInteger theNumeroApostantes;
            theNumeroApostantes = this.getNumeroApostantes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroApostantes", theNumeroApostantes), currentHashCode, theNumeroApostantes);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="EventoId" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="Hecho" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="FechaHecho" type="{http://cnjuego.gob.es/sci/v2.13.xsd}date-aaaammddhhmmssTZ"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "eventoId",
        "hecho",
        "fechaHecho"
    })
    @Entity(name = "RegistroApuesta$Eventos")
    @Table(name = "EVENTOS", schema = "sgij")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Eventos
        implements Equals, HashCode
    {

        @XmlElement(name = "EventoId", required = true)
        protected String eventoId;
        @XmlElement(name = "Hecho", required = true)
        protected String hecho;
        @XmlElement(name = "FechaHecho", required = true)
        protected String fechaHecho;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the eventoId property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "EVENTOID", length = 255)
        public String getEventoId() {
            return eventoId;
        }

        /**
         * Sets the value of the eventoId property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEventoId(String value) {
            this.eventoId = value;
        }

        /**
         * Gets the value of the hecho property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "HECHO", length = 255)
        public String getHecho() {
            return hecho;
        }

        /**
         * Sets the value of the hecho property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setHecho(String value) {
            this.hecho = value;
        }

        /**
         * Gets the value of the fechaHecho property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "FECHAHECHO", length = 255)
        public String getFechaHecho() {
            return fechaHecho;
        }

        /**
         * Sets the value of the fechaHecho property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setFechaHecho(String value) {
            this.fechaHecho = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof RegistroApuesta.Eventos)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final RegistroApuesta.Eventos that = ((RegistroApuesta.Eventos) object);
            {
                String lhsEventoId;
                lhsEventoId = this.getEventoId();
                String rhsEventoId;
                rhsEventoId = that.getEventoId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "eventoId", lhsEventoId), LocatorUtils.property(thatLocator, "eventoId", rhsEventoId), lhsEventoId, rhsEventoId)) {
                    return false;
                }
            }
            {
                String lhsHecho;
                lhsHecho = this.getHecho();
                String rhsHecho;
                rhsHecho = that.getHecho();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "hecho", lhsHecho), LocatorUtils.property(thatLocator, "hecho", rhsHecho), lhsHecho, rhsHecho)) {
                    return false;
                }
            }
            {
                String lhsFechaHecho;
                lhsFechaHecho = this.getFechaHecho();
                String rhsFechaHecho;
                rhsFechaHecho = that.getFechaHecho();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fechaHecho", lhsFechaHecho), LocatorUtils.property(thatLocator, "fechaHecho", rhsFechaHecho), lhsFechaHecho, rhsFechaHecho)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theEventoId;
                theEventoId = this.getEventoId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "eventoId", theEventoId), currentHashCode, theEventoId);
            }
            {
                String theHecho;
                theHecho = this.getHecho();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hecho", theHecho), currentHashCode, theHecho);
            }
            {
                String theFechaHecho;
                theFechaHecho = this.getFechaHecho();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fechaHecho", theFechaHecho), currentHashCode, theFechaHecho);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
