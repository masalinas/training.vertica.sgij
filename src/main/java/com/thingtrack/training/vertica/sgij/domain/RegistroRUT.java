//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 09:48:48 PM CEST 
//


package com.thingtrack.training.vertica.sgij.domain;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RegistroRUT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistroRUT">
 *   &lt;complexContent>
 *     &lt;extension base="{http://cnjuego.gob.es/sci/v2.13.xsd}RegistroPeriodicoBase">
 *       &lt;sequence>
 *         &lt;element name="NumeroJugadores" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="NumeroAltas" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="NumeroBajas" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="NumeroActividad" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="NumeroJugadoresPorEstado" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="EstadoCNJ" type="{http://cnjuego.gob.es/sci/v2.13.xsd}EstadoCNJ"/>
 *                   &lt;element name="EstadoOperador" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="Numero" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistroRUT", propOrder = {
    "numeroJugadores",
    "numeroAltas",
    "numeroBajas",
    "numeroActividad",
    "numeroJugadoresPorEstado"
})
@Entity(name = "RegistroRUT")
@Table(name = "REGISTRORUT", schema = "sgij")
public class RegistroRUT
    extends RegistroPeriodicoBase
    implements Equals, HashCode
{

    @XmlElement(name = "NumeroJugadores", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numeroJugadores;
    @XmlElement(name = "NumeroAltas", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numeroAltas;
    @XmlElement(name = "NumeroBajas", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numeroBajas;
    @XmlElement(name = "NumeroActividad", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger numeroActividad;
    @XmlElement(name = "NumeroJugadoresPorEstado")
    protected List<RegistroRUT.NumeroJugadoresPorEstado> numeroJugadoresPorEstado;

    /**
     * Gets the value of the numeroJugadores property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMEROJUGADORES", precision = 20, scale = 0)
    public BigInteger getNumeroJugadores() {
        return numeroJugadores;
    }

    /**
     * Sets the value of the numeroJugadores property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumeroJugadores(BigInteger value) {
        this.numeroJugadores = value;
    }

    /**
     * Gets the value of the numeroAltas property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMEROALTAS", precision = 20, scale = 0)
    public BigInteger getNumeroAltas() {
        return numeroAltas;
    }

    /**
     * Sets the value of the numeroAltas property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumeroAltas(BigInteger value) {
        this.numeroAltas = value;
    }

    /**
     * Gets the value of the numeroBajas property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMEROBAJAS", precision = 20, scale = 0)
    public BigInteger getNumeroBajas() {
        return numeroBajas;
    }

    /**
     * Sets the value of the numeroBajas property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumeroBajas(BigInteger value) {
        this.numeroBajas = value;
    }

    /**
     * Gets the value of the numeroActividad property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "NUMEROACTIVIDAD", precision = 20, scale = 0)
    public BigInteger getNumeroActividad() {
        return numeroActividad;
    }

    /**
     * Sets the value of the numeroActividad property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumeroActividad(BigInteger value) {
        this.numeroActividad = value;
    }

    /**
     * Gets the value of the numeroJugadoresPorEstado property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the numeroJugadoresPorEstado property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNumeroJugadoresPorEstado().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegistroRUT.NumeroJugadoresPorEstado }
     * 
     * 
     */
    @OneToMany(targetEntity = RegistroRUT.NumeroJugadoresPorEstado.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NUMEROJUGADORESPORESTADO_REG_0")
    public List<RegistroRUT.NumeroJugadoresPorEstado> getNumeroJugadoresPorEstado() {
        if (numeroJugadoresPorEstado == null) {
            numeroJugadoresPorEstado = new ArrayList<RegistroRUT.NumeroJugadoresPorEstado>();
        }
        return this.numeroJugadoresPorEstado;
    }

    /**
     * 
     * 
     */
    public void setNumeroJugadoresPorEstado(List<RegistroRUT.NumeroJugadoresPorEstado> numeroJugadoresPorEstado) {
        this.numeroJugadoresPorEstado = numeroJugadoresPorEstado;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RegistroRUT)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RegistroRUT that = ((RegistroRUT) object);
        {
            BigInteger lhsNumeroJugadores;
            lhsNumeroJugadores = this.getNumeroJugadores();
            BigInteger rhsNumeroJugadores;
            rhsNumeroJugadores = that.getNumeroJugadores();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroJugadores", lhsNumeroJugadores), LocatorUtils.property(thatLocator, "numeroJugadores", rhsNumeroJugadores), lhsNumeroJugadores, rhsNumeroJugadores)) {
                return false;
            }
        }
        {
            BigInteger lhsNumeroAltas;
            lhsNumeroAltas = this.getNumeroAltas();
            BigInteger rhsNumeroAltas;
            rhsNumeroAltas = that.getNumeroAltas();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroAltas", lhsNumeroAltas), LocatorUtils.property(thatLocator, "numeroAltas", rhsNumeroAltas), lhsNumeroAltas, rhsNumeroAltas)) {
                return false;
            }
        }
        {
            BigInteger lhsNumeroBajas;
            lhsNumeroBajas = this.getNumeroBajas();
            BigInteger rhsNumeroBajas;
            rhsNumeroBajas = that.getNumeroBajas();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroBajas", lhsNumeroBajas), LocatorUtils.property(thatLocator, "numeroBajas", rhsNumeroBajas), lhsNumeroBajas, rhsNumeroBajas)) {
                return false;
            }
        }
        {
            BigInteger lhsNumeroActividad;
            lhsNumeroActividad = this.getNumeroActividad();
            BigInteger rhsNumeroActividad;
            rhsNumeroActividad = that.getNumeroActividad();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroActividad", lhsNumeroActividad), LocatorUtils.property(thatLocator, "numeroActividad", rhsNumeroActividad), lhsNumeroActividad, rhsNumeroActividad)) {
                return false;
            }
        }
        {
            List<RegistroRUT.NumeroJugadoresPorEstado> lhsNumeroJugadoresPorEstado;
            lhsNumeroJugadoresPorEstado = (((this.numeroJugadoresPorEstado!= null)&&(!this.numeroJugadoresPorEstado.isEmpty()))?this.getNumeroJugadoresPorEstado():null);
            List<RegistroRUT.NumeroJugadoresPorEstado> rhsNumeroJugadoresPorEstado;
            rhsNumeroJugadoresPorEstado = (((that.numeroJugadoresPorEstado!= null)&&(!that.numeroJugadoresPorEstado.isEmpty()))?that.getNumeroJugadoresPorEstado():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numeroJugadoresPorEstado", lhsNumeroJugadoresPorEstado), LocatorUtils.property(thatLocator, "numeroJugadoresPorEstado", rhsNumeroJugadoresPorEstado), lhsNumeroJugadoresPorEstado, rhsNumeroJugadoresPorEstado)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            BigInteger theNumeroJugadores;
            theNumeroJugadores = this.getNumeroJugadores();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroJugadores", theNumeroJugadores), currentHashCode, theNumeroJugadores);
        }
        {
            BigInteger theNumeroAltas;
            theNumeroAltas = this.getNumeroAltas();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroAltas", theNumeroAltas), currentHashCode, theNumeroAltas);
        }
        {
            BigInteger theNumeroBajas;
            theNumeroBajas = this.getNumeroBajas();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroBajas", theNumeroBajas), currentHashCode, theNumeroBajas);
        }
        {
            BigInteger theNumeroActividad;
            theNumeroActividad = this.getNumeroActividad();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroActividad", theNumeroActividad), currentHashCode, theNumeroActividad);
        }
        {
            List<RegistroRUT.NumeroJugadoresPorEstado> theNumeroJugadoresPorEstado;
            theNumeroJugadoresPorEstado = (((this.numeroJugadoresPorEstado!= null)&&(!this.numeroJugadoresPorEstado.isEmpty()))?this.getNumeroJugadoresPorEstado():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numeroJugadoresPorEstado", theNumeroJugadoresPorEstado), currentHashCode, theNumeroJugadoresPorEstado);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="EstadoCNJ" type="{http://cnjuego.gob.es/sci/v2.13.xsd}EstadoCNJ"/>
     *         &lt;element name="EstadoOperador" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="Numero" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "estadoCNJ",
        "estadoOperador",
        "numero"
    })
    @Entity(name = "RegistroRUT$NumeroJugadoresPorEstado")
    @Table(name = "NUMEROJUGADORESPORESTADO", schema = "sgij")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class NumeroJugadoresPorEstado
        implements Equals, HashCode
    {

        @XmlElement(name = "EstadoCNJ", required = true)
        protected EstadoCNJ estadoCNJ;
        @XmlElement(name = "EstadoOperador", required = true)
        protected String estadoOperador;
        @XmlElement(name = "Numero", required = true)
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger numero;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the estadoCNJ property.
         * 
         * @return
         *     possible object is
         *     {@link EstadoCNJ }
         *     
         */
        @Basic
        @Column(name = "ESTADOCNJ", length = 255)
        @Enumerated(EnumType.STRING)
        public EstadoCNJ getEstadoCNJ() {
            return estadoCNJ;
        }

        /**
         * Sets the value of the estadoCNJ property.
         * 
         * @param value
         *     allowed object is
         *     {@link EstadoCNJ }
         *     
         */
        public void setEstadoCNJ(EstadoCNJ value) {
            this.estadoCNJ = value;
        }

        /**
         * Gets the value of the estadoOperador property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "ESTADOOPERADOR", length = 255)
        public String getEstadoOperador() {
            return estadoOperador;
        }

        /**
         * Sets the value of the estadoOperador property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEstadoOperador(String value) {
            this.estadoOperador = value;
        }

        /**
         * Gets the value of the numero property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        @Basic
        @Column(name = "NUMERO", precision = 20, scale = 0)
        public BigInteger getNumero() {
            return numero;
        }

        /**
         * Sets the value of the numero property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setNumero(BigInteger value) {
            this.numero = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof RegistroRUT.NumeroJugadoresPorEstado)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final RegistroRUT.NumeroJugadoresPorEstado that = ((RegistroRUT.NumeroJugadoresPorEstado) object);
            {
                EstadoCNJ lhsEstadoCNJ;
                lhsEstadoCNJ = this.getEstadoCNJ();
                EstadoCNJ rhsEstadoCNJ;
                rhsEstadoCNJ = that.getEstadoCNJ();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "estadoCNJ", lhsEstadoCNJ), LocatorUtils.property(thatLocator, "estadoCNJ", rhsEstadoCNJ), lhsEstadoCNJ, rhsEstadoCNJ)) {
                    return false;
                }
            }
            {
                String lhsEstadoOperador;
                lhsEstadoOperador = this.getEstadoOperador();
                String rhsEstadoOperador;
                rhsEstadoOperador = that.getEstadoOperador();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "estadoOperador", lhsEstadoOperador), LocatorUtils.property(thatLocator, "estadoOperador", rhsEstadoOperador), lhsEstadoOperador, rhsEstadoOperador)) {
                    return false;
                }
            }
            {
                BigInteger lhsNumero;
                lhsNumero = this.getNumero();
                BigInteger rhsNumero;
                rhsNumero = that.getNumero();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "numero", lhsNumero), LocatorUtils.property(thatLocator, "numero", rhsNumero), lhsNumero, rhsNumero)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                EstadoCNJ theEstadoCNJ;
                theEstadoCNJ = this.getEstadoCNJ();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "estadoCNJ", theEstadoCNJ), currentHashCode, theEstadoCNJ);
            }
            {
                String theEstadoOperador;
                theEstadoOperador = this.getEstadoOperador();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "estadoOperador", theEstadoOperador), currentHashCode, theEstadoOperador);
            }
            {
                BigInteger theNumero;
                theNumero = this.getNumero();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numero", theNumero), currentHashCode, theNumero);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
