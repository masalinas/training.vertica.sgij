//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 09:48:48 PM CEST 
//


package com.thingtrack.training.vertica.sgij.domain;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RegistroBase complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistroBase">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Cabecera" type="{http://cnjuego.gob.es/sci/v2.13.xsd}RegistroCabecera"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistroBase", propOrder = {
    "cabecera"
})
@XmlSeeAlso({
    RegistroAnulador.class,
    RegistroJUD.class,
    RegistroMensualBase.class,
    RegistroPeriodicoBase.class,
    RegistroJUT.class
})
@Entity(name = "RegistroBase")
@Table(name = "REGISTROBASE", schema = "sgij")
@Inheritance(strategy = InheritanceType.JOINED)
public abstract class RegistroBase
    implements Equals, HashCode
{

    @XmlElement(name = "Cabecera", required = true)
    protected RegistroCabecera cabecera;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the cabecera property.
     * 
     * @return
     *     possible object is
     *     {@link RegistroCabecera }
     *     
     */
    @ManyToOne(targetEntity = RegistroCabecera.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CABECERA_REGISTROBASE_HJID")
    public RegistroCabecera getCabecera() {
        return cabecera;
    }

    /**
     * Sets the value of the cabecera property.
     * 
     * @param value
     *     allowed object is
     *     {@link RegistroCabecera }
     *     
     */
    public void setCabecera(RegistroCabecera value) {
        this.cabecera = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RegistroBase)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RegistroBase that = ((RegistroBase) object);
        {
            RegistroCabecera lhsCabecera;
            lhsCabecera = this.getCabecera();
            RegistroCabecera rhsCabecera;
            rhsCabecera = that.getCabecera();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cabecera", lhsCabecera), LocatorUtils.property(thatLocator, "cabecera", rhsCabecera), lhsCabecera, rhsCabecera)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            RegistroCabecera theCabecera;
            theCabecera = this.getCabecera();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cabecera", theCabecera), currentHashCode, theCabecera);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
