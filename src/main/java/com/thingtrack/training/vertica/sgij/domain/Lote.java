//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 09:48:48 PM CEST 
//


package com.thingtrack.training.vertica.sgij.domain;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.hyperjaxb3.xml.bind.JAXBContextUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Cabecera" type="{http://cnjuego.gob.es/sci/v2.13.xsd}LoteCabecera"/>
 *         &lt;element name="Registro" type="{http://cnjuego.gob.es/sci/v2.13.xsd}RegistroBase" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;any namespace='http://www.w3.org/2000/09/xmldsig#' minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "cabecera",
    "registro",
    "any"
})
@XmlRootElement(name = "Lote")
@Entity(name = "Lote")
@Table(name = "LOTE", schema = "sgij")
@Inheritance(strategy = InheritanceType.JOINED)
public class Lote
    implements Equals, HashCode
{

    @XmlElement(name = "Cabecera", required = true)
    protected LoteCabecera cabecera;
    @XmlElement(name = "Registro")
    protected List<RegistroBase> registro;
    @XmlAnyElement(lax = true)
    protected Object any;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;
    public final static String AnyObjectContextPath = "generated:com.thingtrack.sgij.domain";

    /**
     * Gets the value of the cabecera property.
     * 
     * @return
     *     possible object is
     *     {@link LoteCabecera }
     *     
     */
    @ManyToOne(targetEntity = LoteCabecera.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CABECERA_LOTE_HJID")
    public LoteCabecera getCabecera() {
        return cabecera;
    }

    /**
     * Sets the value of the cabecera property.
     * 
     * @param value
     *     allowed object is
     *     {@link LoteCabecera }
     *     
     */
    public void setCabecera(LoteCabecera value) {
        this.cabecera = value;
    }

    /**
     * Gets the value of the registro property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the registro property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRegistro().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RegistroBase }
     * 
     * 
     */
    @OneToMany(targetEntity = RegistroBase.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REGISTRO_LOTE_HJID")
    public List<RegistroBase> getRegistro() {
        if (registro == null) {
            registro = new ArrayList<RegistroBase>();
        }
        return this.registro;
    }

    /**
     * 
     * 
     */
    public void setRegistro(List<RegistroBase> registro) {
        this.registro = registro;
    }

    /**
     * Gets the value of the any property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    @Transient
    public Object getAny() {
        return any;
    }

    /**
     * Sets the value of the any property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setAny(Object value) {
        this.any = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "ANYOBJECT")
    @Lob
    public String getAnyObject() {
        if (JAXBContextUtils.isMarshallable(AnyObjectContextPath, this.getAny())) {
            return JAXBContextUtils.marshal(AnyObjectContextPath, this.getAny());
        } else {
            return null;
        }
    }

    public void setAnyObject(String target) {
        if (target!= null) {
            setAny(JAXBContextUtils.unmarshal(AnyObjectContextPath, target));
        }
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Lote)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Lote that = ((Lote) object);
        {
            LoteCabecera lhsCabecera;
            lhsCabecera = this.getCabecera();
            LoteCabecera rhsCabecera;
            rhsCabecera = that.getCabecera();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cabecera", lhsCabecera), LocatorUtils.property(thatLocator, "cabecera", rhsCabecera), lhsCabecera, rhsCabecera)) {
                return false;
            }
        }
        {
            List<RegistroBase> lhsRegistro;
            lhsRegistro = (((this.registro!= null)&&(!this.registro.isEmpty()))?this.getRegistro():null);
            List<RegistroBase> rhsRegistro;
            rhsRegistro = (((that.registro!= null)&&(!that.registro.isEmpty()))?that.getRegistro():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "registro", lhsRegistro), LocatorUtils.property(thatLocator, "registro", rhsRegistro), lhsRegistro, rhsRegistro)) {
                return false;
            }
        }
        {
            Object lhsAny;
            lhsAny = this.getAny();
            Object rhsAny;
            rhsAny = that.getAny();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            LoteCabecera theCabecera;
            theCabecera = this.getCabecera();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cabecera", theCabecera), currentHashCode, theCabecera);
        }
        {
            List<RegistroBase> theRegistro;
            theRegistro = (((this.registro!= null)&&(!this.registro.isEmpty()))?this.getRegistro():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registro", theRegistro), currentHashCode, theRegistro);
        }
        {
            Object theAny;
            theAny = this.getAny();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
