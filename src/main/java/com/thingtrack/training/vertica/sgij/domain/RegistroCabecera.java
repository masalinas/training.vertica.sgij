//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.08 at 09:48:48 PM CEST 
//


package com.thingtrack.training.vertica.sgij.domain;

import java.math.BigInteger;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RegistroCabecera complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RegistroCabecera">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="OperadorId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="AlmacenId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="RegistroId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="SubregistroId" type="{http://www.w3.org/2001/XMLSchema}positiveInteger"/>
 *         &lt;element name="SubregistroTotal" type="{http://www.w3.org/2001/XMLSchema}positiveInteger"/>
 *         &lt;element name="Fecha" type="{http://cnjuego.gob.es/sci/v2.13.xsd}date-aaaammddhhmmss"/>
 *         &lt;element name="Rectificacion" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="RegistroId" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                   &lt;element name="RegistroFecha" type="{http://cnjuego.gob.es/sci/v2.13.xsd}date-aaaammddhhmmss"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RegistroCabecera", propOrder = {
    "operadorId",
    "almacenId",
    "registroId",
    "subregistroId",
    "subregistroTotal",
    "fecha",
    "rectificacion"
})
@Entity(name = "RegistroCabecera")
@Table(name = "REGISTROCABECERA", schema = "sgij")
@Inheritance(strategy = InheritanceType.JOINED)
public class RegistroCabecera
    implements Equals, HashCode
{

    @XmlElement(name = "OperadorId", required = true)
    protected String operadorId;
    @XmlElement(name = "AlmacenId", required = true)
    protected String almacenId;
    @XmlElement(name = "RegistroId", required = true)
    protected String registroId;
    @XmlElement(name = "SubregistroId", required = true)
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger subregistroId;
    @XmlElement(name = "SubregistroTotal", required = true)
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger subregistroTotal;
    @XmlElement(name = "Fecha", required = true)
    protected String fecha;
    @XmlElement(name = "Rectificacion")
    protected RegistroCabecera.Rectificacion rectificacion;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the operadorId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "OPERADORID", length = 255)
    public String getOperadorId() {
        return operadorId;
    }

    /**
     * Sets the value of the operadorId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOperadorId(String value) {
        this.operadorId = value;
    }

    /**
     * Gets the value of the almacenId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ALMACENID", length = 255)
    public String getAlmacenId() {
        return almacenId;
    }

    /**
     * Sets the value of the almacenId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAlmacenId(String value) {
        this.almacenId = value;
    }

    /**
     * Gets the value of the registroId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "REGISTROID", length = 255)
    public String getRegistroId() {
        return registroId;
    }

    /**
     * Sets the value of the registroId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRegistroId(String value) {
        this.registroId = value;
    }

    /**
     * Gets the value of the subregistroId property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "SUBREGISTROID", precision = 20, scale = 0)
    public BigInteger getSubregistroId() {
        return subregistroId;
    }

    /**
     * Sets the value of the subregistroId property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSubregistroId(BigInteger value) {
        this.subregistroId = value;
    }

    /**
     * Gets the value of the subregistroTotal property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    @Basic
    @Column(name = "SUBREGISTROTOTAL", precision = 20, scale = 0)
    public BigInteger getSubregistroTotal() {
        return subregistroTotal;
    }

    /**
     * Sets the value of the subregistroTotal property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSubregistroTotal(BigInteger value) {
        this.subregistroTotal = value;
    }

    /**
     * Gets the value of the fecha property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "FECHA", length = 255)
    public String getFecha() {
        return fecha;
    }

    /**
     * Sets the value of the fecha property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFecha(String value) {
        this.fecha = value;
    }

    /**
     * Gets the value of the rectificacion property.
     * 
     * @return
     *     possible object is
     *     {@link RegistroCabecera.Rectificacion }
     *     
     */
    @ManyToOne(targetEntity = RegistroCabecera.Rectificacion.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RECTIFICACION_REGISTROCABECE_0")
    public RegistroCabecera.Rectificacion getRectificacion() {
        return rectificacion;
    }

    /**
     * Sets the value of the rectificacion property.
     * 
     * @param value
     *     allowed object is
     *     {@link RegistroCabecera.Rectificacion }
     *     
     */
    public void setRectificacion(RegistroCabecera.Rectificacion value) {
        this.rectificacion = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RegistroCabecera)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RegistroCabecera that = ((RegistroCabecera) object);
        {
            String lhsOperadorId;
            lhsOperadorId = this.getOperadorId();
            String rhsOperadorId;
            rhsOperadorId = that.getOperadorId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "operadorId", lhsOperadorId), LocatorUtils.property(thatLocator, "operadorId", rhsOperadorId), lhsOperadorId, rhsOperadorId)) {
                return false;
            }
        }
        {
            String lhsAlmacenId;
            lhsAlmacenId = this.getAlmacenId();
            String rhsAlmacenId;
            rhsAlmacenId = that.getAlmacenId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "almacenId", lhsAlmacenId), LocatorUtils.property(thatLocator, "almacenId", rhsAlmacenId), lhsAlmacenId, rhsAlmacenId)) {
                return false;
            }
        }
        {
            String lhsRegistroId;
            lhsRegistroId = this.getRegistroId();
            String rhsRegistroId;
            rhsRegistroId = that.getRegistroId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "registroId", lhsRegistroId), LocatorUtils.property(thatLocator, "registroId", rhsRegistroId), lhsRegistroId, rhsRegistroId)) {
                return false;
            }
        }
        {
            BigInteger lhsSubregistroId;
            lhsSubregistroId = this.getSubregistroId();
            BigInteger rhsSubregistroId;
            rhsSubregistroId = that.getSubregistroId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subregistroId", lhsSubregistroId), LocatorUtils.property(thatLocator, "subregistroId", rhsSubregistroId), lhsSubregistroId, rhsSubregistroId)) {
                return false;
            }
        }
        {
            BigInteger lhsSubregistroTotal;
            lhsSubregistroTotal = this.getSubregistroTotal();
            BigInteger rhsSubregistroTotal;
            rhsSubregistroTotal = that.getSubregistroTotal();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subregistroTotal", lhsSubregistroTotal), LocatorUtils.property(thatLocator, "subregistroTotal", rhsSubregistroTotal), lhsSubregistroTotal, rhsSubregistroTotal)) {
                return false;
            }
        }
        {
            String lhsFecha;
            lhsFecha = this.getFecha();
            String rhsFecha;
            rhsFecha = that.getFecha();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fecha", lhsFecha), LocatorUtils.property(thatLocator, "fecha", rhsFecha), lhsFecha, rhsFecha)) {
                return false;
            }
        }
        {
            RegistroCabecera.Rectificacion lhsRectificacion;
            lhsRectificacion = this.getRectificacion();
            RegistroCabecera.Rectificacion rhsRectificacion;
            rhsRectificacion = that.getRectificacion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rectificacion", lhsRectificacion), LocatorUtils.property(thatLocator, "rectificacion", rhsRectificacion), lhsRectificacion, rhsRectificacion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theOperadorId;
            theOperadorId = this.getOperadorId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operadorId", theOperadorId), currentHashCode, theOperadorId);
        }
        {
            String theAlmacenId;
            theAlmacenId = this.getAlmacenId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "almacenId", theAlmacenId), currentHashCode, theAlmacenId);
        }
        {
            String theRegistroId;
            theRegistroId = this.getRegistroId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registroId", theRegistroId), currentHashCode, theRegistroId);
        }
        {
            BigInteger theSubregistroId;
            theSubregistroId = this.getSubregistroId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subregistroId", theSubregistroId), currentHashCode, theSubregistroId);
        }
        {
            BigInteger theSubregistroTotal;
            theSubregistroTotal = this.getSubregistroTotal();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subregistroTotal", theSubregistroTotal), currentHashCode, theSubregistroTotal);
        }
        {
            String theFecha;
            theFecha = this.getFecha();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fecha", theFecha), currentHashCode, theFecha);
        }
        {
            RegistroCabecera.Rectificacion theRectificacion;
            theRectificacion = this.getRectificacion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rectificacion", theRectificacion), currentHashCode, theRectificacion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="RegistroId" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *         &lt;element name="RegistroFecha" type="{http://cnjuego.gob.es/sci/v2.13.xsd}date-aaaammddhhmmss"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "registroId",
        "registroFecha"
    })
    @Entity(name = "RegistroCabecera$Rectificacion")
    @Table(name = "RECTIFICACION", schema = "sgij")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class Rectificacion
        implements Equals, HashCode
    {

        @XmlElement(name = "RegistroId", required = true)
        protected String registroId;
        @XmlElement(name = "RegistroFecha", required = true)
        protected String registroFecha;
        @XmlAttribute(name = "Hjid")
        protected Long hjid;

        /**
         * Gets the value of the registroId property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "REGISTROID", length = 255)
        public String getRegistroId() {
            return registroId;
        }

        /**
         * Sets the value of the registroId property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRegistroId(String value) {
            this.registroId = value;
        }

        /**
         * Gets the value of the registroFecha property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "REGISTROFECHA", length = 255)
        public String getRegistroFecha() {
            return registroFecha;
        }

        /**
         * Sets the value of the registroFecha property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRegistroFecha(String value) {
            this.registroFecha = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof RegistroCabecera.Rectificacion)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final RegistroCabecera.Rectificacion that = ((RegistroCabecera.Rectificacion) object);
            {
                String lhsRegistroId;
                lhsRegistroId = this.getRegistroId();
                String rhsRegistroId;
                rhsRegistroId = that.getRegistroId();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "registroId", lhsRegistroId), LocatorUtils.property(thatLocator, "registroId", rhsRegistroId), lhsRegistroId, rhsRegistroId)) {
                    return false;
                }
            }
            {
                String lhsRegistroFecha;
                lhsRegistroFecha = this.getRegistroFecha();
                String rhsRegistroFecha;
                rhsRegistroFecha = that.getRegistroFecha();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "registroFecha", lhsRegistroFecha), LocatorUtils.property(thatLocator, "registroFecha", rhsRegistroFecha), lhsRegistroFecha, rhsRegistroFecha)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theRegistroId;
                theRegistroId = this.getRegistroId();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registroId", theRegistroId), currentHashCode, theRegistroId);
            }
            {
                String theRegistroFecha;
                theRegistroFecha = this.getRegistroFecha();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "registroFecha", theRegistroFecha), currentHashCode, theRegistroFecha);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

    }

}
